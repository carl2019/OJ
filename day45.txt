#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
using namespace std;
 
int main()
{
    string m, n;
    while(cin >> m >> n) {
        vector<vector<int> > dp(m.length(), vector<int>(n.length(), 0));
        dp[0][0] = (m[0] == n[0])?1:0;
        for(int i=1; i<m.length(); i++) 
        {
            dp[i][0] = (m[i] == n[0]) ? 1 : 0;
            dp[i][0] = max(dp[i-1][0], dp[i][0]);
        }
        for(int j=1; j<n.length(); j++) 
        {
            dp[0][j] = (m[0] == n[j]) ? 1 : 0;
            dp[0][j] = max(dp[0][j-1], dp[0][j]);
        }
        for(int i=1; i<m.length(); i++) 
        {
            for(int j=1; j<n.length(); j++) 
            {
                dp[i][j] = max(dp[i-1][j], dp[i][j-1]);
                if(m[i] == n[j]) 
                {
                    dp[i][j] = max(dp[i][j], dp[i-1][j-1]+1);
                }
            }
        }
        cout << dp[m.length()-1][n.length()] << endl;
    }
    return 0;
}
