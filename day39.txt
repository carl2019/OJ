#include<iostream>
#include<string>
#include<map>
using namespace std;

int main()
{
	string str, res;
	while (cin >> str >> res)
	{
		bool sta = true;
		map<char, int> strdata, resdata;
		for (auto c : str)
			strdata[c]++;
		for (auto c : res)
			resdata[c]++;
		for (map<char, int>::iterator it = resdata.begin(); it != resdata.end(); it++)
		if (strdata[it->first] < it->second)
		{
			sta = false;
			break;
		}
		if (true == sta)
			cout << "Yes" << endl;
		else
			cout << "No" << endl;
	}
	return 0;
}

#include<iostream>
#include<string>
#include<vector>
#include<algorithm>
using namespace std;

bool isBrother(string str, string s)
{
	if (str.size() == s.size())
	{
		if (str == s)
			return false;
		sort(str.begin(), str.end());
		sort(s.begin(), s.end());
		if (str == s)
			return true;
	}
	return false;
}

int main()
{
	int num;
	while (cin >> num)
	{
		string str;
		string word, s;
		int index;
		vector<string> vs;
		for (int i = 0; i < num; ++i)
		{
			cin >> str;
			vs.push_back(str);
		}
		sort(vs.begin(), vs.end()); 
		cin >> word;
		cin >> index;
		int counts = 0;

		for (int i = 0; i < num; ++i)
		{
			if (isBrother(word, vs[i]))
			{
				counts++;
				if (counts == index)
					s = vs[i];
			}
		}
		if (!vs.empty())
			cout << counts << endl;
		if (counts >= index)
			cout << s << endl;

	}
	return 0;
}